//-----_---_-----___----_---_----____---_____-------_____-_---_---__---_----____.--_______-_----___----__---_----____----
//----/*\_/*\---/*_*\--|*|-|*|--/*,__)-/*____]-----/*____]*|-|*|-|**\-|*|--/**__*\[__***__]*|--/*_*\--|**\-|*|--/*,__)---
//---|*******|-|*/-\*|-|*|-|*|-|**\__--|*|_--------|*|_--|*|-|*|-|***\|*|-,**/--\|---|*|--|*|-|*/-\*|-|***\|*|-|**\__----
//---|*|\_/|*|-|*|-|*|-|*\_/*|--\__**\-|**_]-------|**_]-|*\_/*|-|*|\***|-|*|--------|*|--|*|-|*|-|*|-|*|\***|--\__**\---
//---|*|---|*|-|*\_/*|-`*****;-____)*)-|*|___------|*|---`*****;-|*|-\**|-`**\__/|---|*|--|*|-|*\_/*|-|*|-\**|-____)*)---
//---|_|---|_|--\___/---\___/--\____/--\_____]-----|_|----\___/--|_|--\_|--\_____/---|_|--|_|--\___/--|_|--\_|-\____/----

//+++++(   )++(  ___)+(__   __)+++++++++____++___++______+++++888~-_++++,88~-_++++...888...+++++
//+++++( O  )+( )++++++++( )+++++++++++/ __ \/   |/_  __/+++++888   \++d888   \+++...888...+++++
//+++++( __)++(  _)++++++( )++++++++++/ /_/ / /| |+/ /++++++++888   /+88888    |++   888   +++++
//+++++( )++++( )++++++++( )+++++++++/ ____/ ___ |/ /+++++++++888_-~+++Y888   /+++   888   +++++
//+++++(_)++++(_____)++++(_)++++++++/_/+++/_/++|_/_/++++++++++888+++++++`88_-~++++   888   +++++

OnMouseClick
{
	if reference4 == "Buttons"
	{
		if stopfunction == 1
		{
			stopfunction = 0
			"%(k0)"
		}
		else
		{
			stopfunction = 1
			"%(k0)"
		}
	}
	elseif reference4 == "L Button"
	{
		"\1\![bind,unit circle,,0]"
	}
	elseif reference4 == "R Button" && unitcircleactive[0] == 1
	{
		OnChangeColors
	}
}


OnMouseDoubleClick
// (＾＾)ｂ Inbuilt!
{
	if reference5 == 0
	{
		if reference3 == 0 //this is the character, as above
		{
			MouseDoubleClickSakura
		}
		else
		{
			MouseDoubleClickKero
		}
	}
}


MouseDoubleClickSakura
{
	if reference4 == "Button1"
	{
		spamon = 0
		--
		"s0"
	}
	--
	OpenSakuraMenu
}

MouseDoubleClickKero
{
	"\1\s[10]"
	--
	if SHIORI3FW.ShellName == "Radio"
	{
		if unitcircleactive[1] == 1
		{
			OnChooseCircle
		}
		else
		{
			"-bzzt-"
		}
		
	}
	elseif SHIORI3FW.ShellName == "Ship"
	{
		"[creak]"
	}
}



OnMouseMultipleClick
// (＾＾)ｂ Inbuilt!
{
	if reference3 == 0
	{
		if reference7 == 3
		{
			MouseMultipleClickSakura
		}
		else
		{
			"%(s0)Had I %(reference7) ears I'd hear ye!\b2\_q\n\n"
		}
		--
		OnMenuRun

	}
	else
	{
		MouseMultipleClickKero
	}

}

MouseMultipleClickSakura
{
	
	_open = 0
	_b = BalloonCheck
	if _b == 0
	{
		_open = 1
	}
	"%(s0)\b2\_qHad I three ears I'd hear ye!\n\n"
	--
	if _open == 1
	{
		OnMenuRun
	}
}


OnMouseMove
// (^^)b Inbuilt!
{
	if reference3 == 0
	{
		if reference4 == "Speaker"
		{
			stroke[0]++
			stroke[1]++
			
			if stroke[0] >= 40
			{
				stroke[0] = 0
				
				OnSpeakerMenu
			}
		}
		elseif reference4 == "Sail"
		{
			stroke[0]++
			stroke[1]++
			
			if stroke[0] >= 40
			{
				stroke[0] = 0
				pettingsail = 1
				"\0\s[14]"
				"\0\s[15]"
				"\0\s[16]"
				"\0\s[17]"
			}
		}
	}
}

OnMouseDragStart
// (＾＾)ｂ Inbuilt!
{
    if reference3 == 0
	{
		//might be able to make the sail flow in relation to the direction of the mouse, as per reference2
		//could also do something with x and y coordinates (references 0 and 1)
		_b = BalloonCheck
		if _b == 1
		{
		   "\C%(s0)"
		}
			
		else
		{
		   "%(s0)"
		}
	}
	elseif reference3 == 1
	{
		_b = BalloonCheck
     
		if _b == 1
		{
		   "\C%(k0)"
		}
			
		else
		{
		   "%(k0)"
		}
	}
}
 
OnMouseDragEnd
// (＾＾)ｂ Inbuilt!
{
	LOGGING("the mouse is dragging===============")
	if reference3 == 0
	{
		_b = BalloonCheck
     
		if _b == 1
		{
		   "\C%(s0)"
		}
			
		else
		{
		   "%(s0)"
		}
		--
		"\![get,property,OnMe,currentghost.scope(0).rect]"
	}
	elseif reference3 == 1
	{
		_b = BalloonCheck
     
		if _b == 1
		{
		   "\C%(k0)"
		}
			
		else
		{
		   "%(k0)"
		}
		--
		"\![get,property,OnMe,currentghost.scope(0).rect]"
	}
}


OnMouseWheel
{
	if reference4 == "Sail"
	{
		pettingsail = 1
		"\0\s[14]"
		"\0\s[15]"
		"\0\s[16]"
		"\0\s[17]"
	}
}

OnMouseLeaveAll
{
	if reference3 == 0
	{
		stroke[0] = 0
		stroke[1] = 0
		if pettingsail == 1
		{
			"%(s0)"
			pettingsail = 0
		}
	}
}

/*
    _previous = RE_SPLIT(SPLIT(SHIORI3FW.LastTalk,"\e")[0],"\\!\[raise,OnTalkingChar,\d\]",TalkingParagraph + 1)
    _notsaidyet = ""
    if ARRAYSIZE(_previous) == 1; _notsaidyet = _previous
    else; _notsaidyet = _previous[TalkingParagraph]


*/

//do i even need radians, though? can i just get the slope?

	/*
	77 = pi/4      0.785397
	75 = pi/6      0.523590
	74 = 0 | 2pi   0 | 6.203180
	73 = 11pi/6    5.759582
	71 = 7pi/4     5.497782
	68-69 = 3pi/2  4.712385
	67 = 4pi/3     4.188787
	66 = 5pi/4     3.926988
	65 = 7pi/6     3.665188
	64 = pi        3.14159
	63 = 5pi/6     2.617992
	   = 3pi/4 (//70,72,76)    2.356192
	62 = 2pi/3     2.094393
	61 = pi/2      1.570795
	60 = pi/3      1.047197
*/


OneWingedAngle
{
	//LOGGING("%x_cursor,%y_cursor")
	_type = reference0
	if _type == "wiggle"
	{
		stopfunction = 0
	}
	elseif _type == "follow"
	{
		stopfollow = 0
		seetime = 0
	}
	--
	"\![get,property,OnWhereRU,system.cursor.pos]"
}

//ghost position and cursor position
OnWhereRU
{
	_cursorloc = reference0
	
	x_cursor = _cursorloc[0]
	y_cursor = _cursorloc[1]
	
	if stopfunction == 0
	{
		OnAngleBetween
	}
	elseif stopfollow == 0
	{
		OnRadAngle
	}
}

OnMe
{
	_ghostloc = reference0
	
	_x_ghost = _ghostloc[0]
	_y_ghost = _ghostloc[1]
	_x2_ghost = _ghostloc[2]
	_y2_ghost = _ghostloc[3]
	
	_midpointx = TOINT(TOINT(_x_ghost)+((_x2_ghost-_x_ghost)/2))
	
	_midpointy = TOINT(((_y2_ghost-_y_ghost)/2)+TOINT(_y_ghost))
	
	topme = (_midpointx,_y_ghost)
	midme = (_midpointx,_midpointy)
}

OnMe2
{
	//dial of radio kero is 85,91
	_ghostloc = reference0
	
	_x_ghost = _ghostloc[0]
	_y_ghost = _ghostloc[1]
	_x2_ghost = _ghostloc[2]
	_y2_ghost = _ghostloc[3]
	
	_midpointx = TOINT(TOINT(_x_ghost)+((_x2_ghost-_x_ghost)/2))
	
	_midpointy = TOINT(((_y2_ghost-_y_ghost)/2)+TOINT(_y_ghost))
	
	_dialx = (TOINT(_x_ghost)+85)
	_dialy = (TOINT(_y_ghost)+91)
	
	topme2 = (_midpointx,_y_ghost)
	midme2 = (_midpointx,_midpointy)
	dialme2 = (_dialx,_dialy)
}


OnAngleBetween
{
	quadrant = ""
	x_distance = (x_cursor-dialme2[0]) //distance between the cursor and the dial in the x direction
	y_distance = (y_cursor-dialme2[1]) //distance between the cursor and the dial in the y direction
	h_distance = SQRT(POW(x_distance,2)+POW(y_distance,2)) //the hypotenuse, or the straight line distance between the cursor and the dial
	
	slope = (y_distance/x_distance)
	remaining = slope/(pi/2)
	
	angle = ATAN(slope)
	angle2 = ATAN(remaining)
	
	if (x_distance <= 0) && (y_distance < 0)
	//-x,-y
	{
		if (x_distance == 0)
		{
			quadrant = "n"
		}
		else
		{
			quadrant = 2
		}
	}
	elseif (x_distance > 0) && (y_distance <= 0)
	//+x,-y
	{
		if (y_distance == 0)
		{
			quadrant = "e"
		}
		else
		{
			quadrant = 1
		}
	}
	elseif (x_distance >= 0) && (y_distance > 0)
	//+x,+y
	{
		if (x_distance == 0)
		{
			quadrant = "n"
		}
		else
		{
			quadrant = 4
		}
	}
	elseif (x_distance < 0) && (y_distance >= 0)
	//-x,+y
	{
		if (x_distance == 0)
		{
			quadrant = "w"
		}
		else
		{
			quadrant = 3
		}
	}
	else
	//if both are 0, the cursor's on the dot
	{
		quadrant = "c"
	}
	
	--
	_b = BalloonCheck
	
	if _b == 1
	{
		"\C%(k0)"
	}
	else
	{
		"%(k0)"
	}			  
	//"%(k0)%(x_distance),%(y_distance), %quadrant"
	//now how do i make the ghost respond to the cursor :thonking:
}

radarray
{
	_radarray = (0,0.523590,0.785397,1.047197,1.570795,1.570795,2.094393,2.356192,2.617992,3.14159,3.665188,3.926988,4.188787,4.712385,5.497782,5.759582,6.203180)
	
	//0.261795,1.178084,1.701694,2.356193,3.141590,3.403389,4.319686,4.843284,5.497783,6.544979,7.461276,7.984875,8.639373,9.817469,11.126464,11.740963
	//0.261795,0.654494,0.916297,1.308996,1.570795,1.832594,2.225293,2.487092,2.879791,3.403389,3.796088,4.057887,4.450586,5.105084,5.628682,5.981381
	
	_midangles = IARRAY
	
	for _val = 0; _val < (ARRAYSIZE(_radarray)-1); _val++
	{
		_rad1 = _radarray[_val]
		_rad2 = _radarray[_val+1]
		
		_radmid = (_rad1+_rad2)/2
		
		_midangles ,= _radmid
		
	}
	--
	LOGGING(_midangles)
	LOGGING(ARRAYSIZE(_midangles))
}


OnRadAngle
{	
	x_distance = TOREAL(x_cursor-dialme2[0]) 
	y_distance = TOREAL(y_cursor-dialme2[1]) 
	h_distance = SQRT(POW(x_distance,2)+POW(y_distance,2))

	slope = (y_distance/x_distance)
	
	angle = ATAN(slope)
	LOGGING("the x is %(x_distance) and the y is %(y_distance)")
	LOGGING("the slope is %slope and the angle is %angle")

	//"%(k0)The cursor is at (%(x_cursor),%(y_cursor))\n/
	//My dial is at (%(dialme2[0]),%(dialme2[1]))\n/
	//The distance between us is %(h_distance)\n/
	//that is, at %(x_distance) run and %(y_distance) rise\n/
	//This makes the slope %(slope) and the angle would thus be %(angle)/
	"\1\s[10]"
	--
	_abs = SQRT(POW(angle,2))
	LOGGING("the absolute value is %(_abs)")
	if (x_distance <= 0) && (y_distance < 0)
	//-x,-y
	{
		if (x_distance == 0)
		{
			nearesttheta = "n"
		}
		else
		{
			LOGGING("I am in quadrant 2=================")
			"\i"
			--
			quadrant = 2
			case _abs
			{
				//64 = pi        3.14159
				//63 = 5pi/6     2.617992
				//   = 3pi/4 (//70,72,76)    2.356192
				//62 = 2pi/3     2.094393
				//61 = pi/2      1.570795
				when 0-0.261795
				{
					"[39]"
				}
				when 0.261795-0.654494
				{
					//nearesttheta = 62
					"[38]"
				}
				when 0.654494-0.916297
				{
					//nearesttheta = 70,72,76
					"[37]"
				}
				when 0.916297-1.308996
				{
					//nearesttheta = 63
					"[36]"
				}
				when 1.308996-1.570795
				{
					//nearesttheta = 64
					"[35]"
				}
			}
		}
	}
	elseif (x_distance > 0) && (y_distance <= 0)
	//+x,-y
	{
		LOGGING("I am in quadrant 1=================")
		if (y_distance == 0)
		{
			nearesttheta = "e"
		}
		else
		{
			"\i"
			--
			quadrant = 1
			case _abs
			{
				//61 = pi/2      1.570795
				//60 = pi/3      1.047197
				//77 = pi/4      0.785397
				//75 = pi/6      0.523590
				//74 = 0 | 2pi   0 | 6.203180
				when 0-0.261795
				{
					//nearesttheta = 74
					"[51]"
				}
				when 0.261795-0.654494
				{
					//nearesttheta = 75
					"[31]"
				}
				when 0.654494-0.916297
				{
					//nearesttheta = 77
					"[33]"
				}
				when 0.916297-1.308996
				{
					//nearesttheta = 60
					"[34]"
				}
				when 1.308996-1.570795
				{
					//nearesttheta = 61
					"[35]"
				}
			}
		}
	}
	elseif (x_distance >= 0) && (y_distance > 0)
	//+x,+y
	{
		LOGGING("I am in quadrant 4=================")
		if (x_distance == 0)
		{
			nearesttheta = "n"
		}
		else
		{
			"\i"
			--
			quadrant = 4
			case _abs
			{
				//74 = 0 | 2pi   0 | 6.203180
				//73 = 11pi/6    5.759582
				//71 = 7pi/4     5.497782
				//68-69 = 3pi/2  4.712385
				when 0-0.261795
				{
					//nearesttheta = 68,69
					"[51]"
				}
				when 0.261795-0.654494
				{
					//nearesttheta = 68,69
					"[50]"
				}
				when 0.654494-0.916297
				{
					//nearesttheta = 71
					"[48]"
				}
				when 0.916297-1.308996
				{
					//nearesttheta = 73
					"[47]"
				}
				when 1.308996-1.570795
				{
					"[44]"
				}
			}
		}
	}
	elseif (x_distance < 0) && (y_distance >= 0)
	//-x,+y
	{
		LOGGING("I am in quadrant 3=================")
		if (x_distance == 0)
		{
			quadrant = "w"
		}
		else
		{
			"\i"
			--
			quadrant = 3
			case _abs
			{
				//68-69 = 3pi/2  4.712385
				//67 = 4pi/3     4.188787
				//66 = 5pi/4     3.926988
				//65 = 7pi/6     3.665188
				//64 = pi        3.14159
				
				when 0-0.261795
				{
					//nearesttheta = 64
					"[39]"
				}
				when 0.261795-0.654494
				{
					//nearesttheta = 65
					"[40]"
				}
				when 0.654494-0.916297
				{
					//nearesttheta = 66
					"[41]"
				}
				when 0.916297-1.308996
				{
					//nearesttheta = 67
					"[42]"
				}
				when 1.308996-1.570795
				{
					//nearesttheta = 68,69
					"[44]"
				}
			}
		}
	}
	else
	//if both are 0, the cursor's on the dot
	{
		nearesttheta = "c"
	}
	--
	_b = BalloonCheck
	
	if _b == 1
	{
		"\C"
	}
	else
	{
		""
	}	
}
